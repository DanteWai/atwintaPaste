{"version":3,"file":"js/view-Auth-Login-vue.js","mappings":"8ZAKA,E,mBCsCA,IAAMA,GAAS,UAETC,GAAO,QAAS,CAClBC,MAAO,GACPC,SAAU,KAGRC,EAAQ,CACVF,MAAO,CAAC,YACRC,SAAU,CAAC,aAITE,EAAW,e,EAAA,G,EAAA,UAAG,WAAOC,EAAGC,EAASC,GAAnB,4EACXD,EADW,yCAELC,KAFK,wBAKI,QAAU,CAC1BN,MAAOD,EAAKC,MACZC,SAAUF,EAAKE,WAPH,qBAKXM,EALW,EAKXA,OALW,kBAWZ,QAAS,CAACC,KAAMD,EAAME,UACtBV,EAAKE,SAAW,GAZJ,+BAcZ,QAAS,CAACO,KAAM,YAAsBE,KAAK,YAd/B,UAeNZ,EAAOa,KAAK,KAfN,2C,+KAAH,0D","sources":["webpack:///./resources/src/views/Auth/Login.vue?a385","webpack:///./resources/src/views/Auth/Login.vue"],"sourcesContent":["import script from \"./Login.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Login.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <base-page-title>Login page</base-page-title>\n    <form-validate-provider :fields=\"form\" :rules=\"rules\">\n        <template #default=\"{ isValid, errors, globalTrigger, activateTrigger, watchFieldError }\">\n            <v-form @submit=\"loginSubmit($event, isValid, activateTrigger)\">\n                <form-section>\n                    <v-label for=\"login\">Login</v-label>\n                    <v-input id=\"login\" name=\"login\" v-model:value=\"form.login\" :error=\"errors?.login?.[0]\"/>\n                </form-section>\n                <form-section>\n                    <v-label for=\"password\">Password</v-label>\n                    <v-input id=\"password\" name=\"password\" type=\"password\" v-model:value=\"form.password\"\n                             :error=\"errors?.password?.[0]\"/>\n                </form-section>\n                <form-section>\n                    <v-button>Login</v-button>\n                </form-section>\n                <template #errors v-if=\"globalTrigger\">\n                    <template v-for=\"errorField in errors\">\n                        <p v-for=\"error in errorField\">{{ error }}</p>\n                    </template>\n                </template>\n            </v-form>\n        </template>\n    </form-validate-provider>\n</template>\n\n<script setup>\nimport {\n    FormValidateProvider,\n    VForm,\n    FormSection,\n    VInput,\n    VLabel,\n    VButton,\n} from \"../../components/common/vForm\";\n\nimport {reactive} from 'vue';\nimport {userLogin} from \"../../composables/useUser\";\nimport {addAlert} from \"../../composables/useAlert\";\nimport {authMessages} from \"../../config/messages\";\nimport {useRouter} from \"vue-router\";\n\nconst router = useRouter()\n\nconst form = reactive({\n    login: '',\n    password: '',\n})\n\nconst rules = {\n    login: ['required'],\n    password: ['required'],\n}\n\n\nconst loginSubmit = async (e, isValid, trigger) => {\n    if (!isValid) {\n        return trigger()\n    }\n\n    let {error} = await userLogin({\n        login: form.login,\n        password: form.password\n    })\n\n    if (error) {\n        addAlert({text: error.message})\n        form.password = ''\n    } else {\n        addAlert({text: authMessages.success, type:'success'})\n        await router.push('/')\n    }\n}\n</script>\n"],"names":["router","form","login","password","rules","loginSubmit","e","isValid","trigger","error","text","message","type","push"],"sourceRoot":""}