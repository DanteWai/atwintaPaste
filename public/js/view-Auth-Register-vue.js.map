{"version":3,"file":"js/view-Auth-Register-vue.js","mappings":"6bAKA,E,mBC0CA,IAAMA,GAAS,UAETC,GAAO,QAAS,CAClBC,MAAO,GACPC,SAAU,GACVC,MAAO,KAGLC,EAAQ,CACVH,MAAO,CAAC,YACRC,SAAU,CAAC,YACXC,MAAO,CAAC,WAAY,UAGlBE,EAAW,e,EAAA,G,EAAA,UAAG,WAAOC,EAAGC,EAASC,GAAnB,4EACXD,EADW,yCAELC,KAFK,wBAKI,QAAiB,CACjCP,MAAOD,EAAKC,MACZC,SAAUF,EAAKE,SACfC,MAAOH,EAAKG,QARA,qBAKXM,EALW,EAKXA,OALW,kBAYZ,QAAS,CAACC,KAAMD,EAAME,UACtBX,EAAKE,SAAW,GAbJ,+BAeZ,QAAS,CAACQ,KAAM,YAAsBE,KAAK,YAf/B,UAgBNb,EAAOc,KAAK,KAhBN,2C,+KAAH,0D","sources":["webpack:///./resources/src/views/Auth/Register.vue?5fa3","webpack:///./resources/src/views/Auth/Register.vue"],"sourcesContent":["import script from \"./Register.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Register.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <base-page-title>Registration page</base-page-title>\n    <form-validate-provider :fields=\"form\" :rules=\"rules\">\n        <template #default=\"{ isValid, errors, globalTrigger, activateTrigger, watchFieldError }\">\n            <v-form @submit=\"loginSubmit($event, isValid, activateTrigger)\">\n                <form-section>\n                    <v-label for=\"login\">Login</v-label>\n                    <v-input id=\"login\" name=\"login\" v-model:value=\"form.login\" :error=\"errors?.login?.[0]\"/>\n                </form-section>\n                <form-section>\n                    <v-label for=\"email\">Email</v-label>\n                    <v-input id=\"email\" name=\"email\" type=\"text\" v-model:value=\"form.email\" :error=\"errors?.email?.[0]\"/>\n                </form-section>\n                <form-section>\n                    <v-label for=\"password\">Password</v-label>\n                    <v-input id=\"password\" name=\"password\" type=\"password\" v-model:value=\"form.password\"\n                             :error=\"errors?.password?.[0]\"/>\n                </form-section>\n                <form-section>\n                    <v-button>Register</v-button>\n                </form-section>\n                <template #errors v-if=\"globalTrigger\">\n                    <template v-for=\"errorField in errors\">\n                        <p v-for=\"error in errorField\">{{ error }}</p>\n                    </template>\n                </template>\n            </v-form>\n        </template>\n    </form-validate-provider>\n</template>\n\n<script setup>\nimport {\n    FormValidateProvider,\n    VForm,\n    FormSection,\n    VInput,\n    VLabel,\n    VButton,\n} from \"../../components/common/vForm\";\n\nimport {reactive} from 'vue';\nimport {userRegistration} from \"../../composables/useUser\";\nimport {addAlert} from \"../../composables/useAlert\";\nimport {authMessages} from \"../../config/messages\";\nimport {useRouter} from \"vue-router\";\n\nconst router = useRouter()\n\nconst form = reactive({\n    login: '',\n    password: '',\n    email: '',\n})\n\nconst rules = {\n    login: ['required'],\n    password: ['required'],\n    email: ['required', 'email'],\n}\n\nconst loginSubmit = async (e, isValid, trigger) => {\n    if (!isValid) {\n        return trigger()\n    }\n\n    let {error} = await userRegistration({\n        login: form.login,\n        password: form.password,\n        email: form.email\n    })\n\n    if (error) {\n        addAlert({text: error.message})\n        form.password = ''\n    } else {\n        addAlert({text: authMessages.success, type:'success'})\n        await router.push('/')\n    }\n\n}\n</script>\n"],"names":["router","form","login","password","email","rules","loginSubmit","e","isValid","trigger","error","text","message","type","push"],"sourceRoot":""}